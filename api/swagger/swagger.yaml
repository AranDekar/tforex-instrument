swagger: "2.0"
info:
  version: "0.0.1"
  title: Instrument
# during dev, should point to your local machine
host: localhost:10040
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
  
securityDefinitions:
  api_key:
    type: apiKey
    in: header
    name: api-key
    
tags:
- name: instrument
  description: Everything about instruments
  externalDocs:
    description: Find out more
    url: http://swagger.io
- name: candle
  description: Everything about candles


    
paths:
  /instruments:
    x-swagger-router-controller: instrument.controller
    get:
      tags: 
        - instrument
      security:
        - api_key: []
      description: Returns a list of instruments or a single one if provided the title
      produces:
        - application/json
      operationId: getInstruments
      parameters: 
        - name: title
          in: query
          description: The title of a specific instrument
          required: false
          type: string
          enum:
            - AUD_USD
      responses:
        "200":
          description: A list of instruments
          schema: 
            type: array
            items:
              $ref: "#/definitions/Instrument"
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /instruments/{instrument}/events:
    # binds a127 app logic to a route
    x-swagger-router-controller: instrument.controller
    get:
      tags: 
        - instrument
      security:
        - api_key: []
      description: gets limited number of events of an instrument
      operationId: getEvents
      parameters:
        - name: instrument
          description: the instrument of the candles
          in: path
          required: true
          type: string
          enum:
            - AUD_USD
            - GBP_USD
            - EUR_USD
        - name: candleTime
          description: if provided, the limited number of events are returned where their candle time is greater than this
          type: string
          format: date-time
          in: query
        - name: events
          description: a comma separated list of events that are required to return
          type: string
          in: query
          required: true
      responses:
        "200":
          description: Success
          schema: 
            type: array
            items:
              $ref: "#/definitions/InstrumentEvent"
            example:   # Sample object
              count: 100
        default:
          description: Error
          schema:
            $ref: "#/definitions/ErrorResponse"
  /swagger:
    x-swagger-pipe: swagger_raw
# complex objects have schema definitions
definitions:
  Instrument:
    type: object
    required:
      - _id
      - displayName
      - halted
      - title
      - path
      - marginRate
      - maxTradeUnits
      - maxTrailingStop
      - minTrailingStop
      - pip
      - precision
      - granularities
    properties:
      _id:
        type: string
      displayName:
        type: string
      halted:
        type: boolean
      title:
        type: string
      path:
        type: string
      marginRate:
        type: number
      maxTradeUnits:
        type: number
      maxTrailingStop:
        type: number
      minTrailingStop:
        type: number
      pip:
        type: string
      precision:
        type: string
      granularities:
        type: array
        items:
          type: string  
  InstrumentEvent:
    type: object
    required:
      - name
      - time
      - candleTime
      - bidPrice
      - askPrice
      - isDispatched
      - context
    properties:
      name:
        type: string
      time:
        type: string
        format: date-time
      candleTime:
        type: string
        format: date-time
      bidPrice:
        type: number
      askPrice:
        type: number
      isDispatched:
        type: boolean
      context:
        type: object
      
      
  # Candle:
  #   type: object
  #   properties:
  #     closeAsk:
  #       type: number
  #     closeBid:
  #       type: number
  #     complete:
  #       type: boolean
  #     highAsk:
  #       type: number
  #     highBid:
  #       type: number
  #     lowAsk:
  #       type: number
  #     lowBid:
  #       type: number
  #     openAsk:
  #       type: number
  #     openBid:
  #       type: number
  #     time:
  #       type: string
  #     volume:
  #       type: number    
  # EventResponse:
  #   required:
  #     - message
  #   properties:
  #     message:
  #       type: string
  ErrorResponse:
    required:
      - message
      - code
    properties:
      message:
        type: string
      code:
        type: string